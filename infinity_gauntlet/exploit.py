from pwn import *
#from string import printable

def foo(a, b, c):
	if(a == '?'):	
		return int(c)^(int(b)+1)^1337
	elif(b == '?'):
		return (int(a)^int(c)^1337)-1
	else:
		return int(a)^(int(b)+1)^1337

def bar(a, b, c, d):
	if(a == '?'):
		return int(d)-int(b)*(int(c)+1)
	elif(b == '?'):
		return (int(d)-int(a)) // (int(c)+1)
	elif(c == '?'):
		return ((int(d) - int(a)) // int(b)) -1
	else:
		return (int(c)+1)* int(b) + int(a)

flag = [0 for i in range(40)]
p = process('./infinity_gauntlet')
for i in range(1, 150):
	p.recvuntil('===\n')
	# bar(378, 718, 53) = ?s
	qt = p.recvline()[:-1].decode()
	print(f'ROUND_{i}: {qt}')
	qt_lst = qt.replace('(', ',').replace(') = ', ',').replace(', ', ',').split(',')[1:] # co the dung regex
	#print(qt_lst)
	if(len(qt_lst) == 3): #foo
		ans = foo(qt_lst[0], qt_lst[1], qt_lst[2])
	else:#bar
		ans = bar(qt_lst[0], qt_lst[1], qt_lst[2], qt_lst[3])
	p.sendline(f'{ans}')
	print(ans)
	# COUNTER > 49
	if(49 < i):
		idx = (ans >> 8) - i
		flag[idx] = ans % 256

flag_unxored = ''
# co the dung tuple
for idx, char in enumerate(flag):
	if(char != 0):
		char_unxored = char^(idx *17) & 0xff
		# if(chr(char_unxored) not in printable and char > 128):
		# 	char_unxored = (char - 128) ^ (idx * 17) % 256
		flag_unxored += chr(char_unxored)
print('Flag: {}'.format(flag_unxored))

